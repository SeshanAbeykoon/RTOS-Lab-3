//User Input Delay

//Configure to use 1 CPU Core
#if CONFIG_FREETOS_UNICORE
static const BaseType_t cpu = 0;
#else
static const BaseType_t cpu = 1;
#endif

void task1_blink(void *param);
void task2_blink(void *param);
String task1_delay = "";
String task2_delay = "";

void setup()
{
    // Set LEDs as output
    pinMode(LED_BUILTIN, OUTPUT);
    // Serial monitor setup
    Serial.begin(115200);
    
    Serial.println("Enter Task1 delay in ms");
    while(Serial.available() == 0){}
    task1_delay = Serial.readString();
    Serial.print("Task1 Delay = ");
    Serial.println(task1_delay);

    Serial.println("Enter Task2 delay in ms");
    while(Serial.available() == 0){}
    task2_delay = Serial.readString();
    Serial.print("Task2 Delay = ");
    Serial.println(task2_delay);

        //Task 1 Execution
        xTaskCreatePinnedToCore(
                task1_blink,            //Calling task1 Function
                "Task1 - Blink1",       //Name of Task
                1024,                   //Stack Size
                NULL,                   //Function Parameters
                1,                      //Task Priority
                NULL,                   //Task Handle
                cpu);                   //Runs on 1 CPU Core

        //Task 2 Execution
        xTaskCreatePinnedToCore(
                task2_blink,            //Calling task2 Function
                "Task2 - Blink2",   //Name of Task
                1024,                   //Stack Size
                NULL,                   //Function Parameters
                1,                      //Task Priority
                NULL,                   //Task Handle
                cpu);                   //Runs on 1 CPU Core
}
void loop()
{

}
//LED Blink Functions
void task1_blink(void *param){
  while(1){
    Serial.println("Task 1");
    digitalWrite(LED_BUILTIN, HIGH);
    vTaskDelay(task1_delay.toInt()/portTICK_PERIOD_MS);
    digitalWrite(LED_BUILTIN, LOW);
    vTaskDelay(task1_delay.toInt()/portTICK_PERIOD_MS);
  }
}

void task2_blink(void *param){
  while(1){
    Serial.println("Task 2");
    digitalWrite(LED_BUILTIN, HIGH);
    vTaskDelay(task2_delay.toInt()/portTICK_PERIOD_MS);
    digitalWrite(LED_BUILTIN, LOW);
    vTaskDelay(task2_delay.toInt()/portTICK_PERIOD_MS);
  }
}
